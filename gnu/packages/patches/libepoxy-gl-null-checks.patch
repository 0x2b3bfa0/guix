This patch from <https://bugzilla.redhat.com/show_bug.cgi?id=1395366> adds NULL
checks to avoid crashes when GL support is missing, as is the case when running
Xvfb.

Upstream issue: <https://github.com/anholt/libepoxy/issues/72>.

diff -ur libepoxy-1.3.1/src/dispatch_common.c libepoxy-1.3.1/src/dispatch_common.c
--- libepoxy-1.3.1/src/dispatch_common.c	2015-07-15 19:46:36.000000000 -0400
+++ libepoxy-1.3.1/src/dispatch_common.c	2016-11-16 09:03:52.809066247 -0500
@@ -348,6 +348,8 @@
 epoxy_extension_in_string(const char *extension_list, const char *ext)
 {
     const char *ptr = extension_list;
+    if (! ptr) return false;
+    if (! ext) return false;
     int len = strlen(ext);
 
     /* Make sure that don't just find an extension with our name as a prefix. */
@@ -380,6 +382,7 @@
 
         for (i = 0; i < num_extensions; i++) {
             const char *gl_ext = (const char *)glGetStringi(GL_EXTENSIONS, i);
+            if (! gl_ext) return false;
             if (strcmp(ext, gl_ext) == 0)
                 return true;
         }
diff -ur libepoxy-1.3.1/src/dispatch_egl.c libepoxy-1.3.1/src/dispatch_egl.c
--- libepoxy-1.3.1/src/dispatch_egl.c	2015-07-15 19:46:36.000000000 -0400
+++ libepoxy-1.3.1/src/dispatch_egl.c	2016-11-16 08:40:34.069358709 -0500
@@ -46,6 +46,7 @@
     int ret;
 
     version_string = eglQueryString(dpy, EGL_VERSION);
+    if (! version_string) return 0;
     ret = sscanf(version_string, "%d.%d", &major, &minor);
     assert(ret == 2);
     return major * 10 + minor;
diff -ur libepoxy-1.3.1/src/dispatch_glx.c libepoxy-1.3.1/src/dispatch_glx.c
--- libepoxy-1.3.1/src/dispatch_glx.c	2015-07-15 19:46:36.000000000 -0400
+++ libepoxy-1.3.1/src/dispatch_glx.c	2016-11-16 08:41:03.065730370 -0500
@@ -57,11 +57,13 @@
     int ret;
 
     version_string = glXQueryServerString(dpy, screen, GLX_VERSION);
+    if (! version_string) return 0;
     ret = sscanf(version_string, "%d.%d", &server_major, &server_minor);
     assert(ret == 2);
     server = server_major * 10 + server_minor;
 
     version_string = glXGetClientString(dpy, GLX_VERSION);
+    if (! version_string) return 0;
     ret = sscanf(version_string, "%d.%d", &client_major, &client_minor);
     assert(ret == 2);
     client = client_major * 10 + client_minor;
