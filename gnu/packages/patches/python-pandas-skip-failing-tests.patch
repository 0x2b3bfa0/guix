These tests fail on 32bit architectures.

Upstream bug URL: https://github.com/pandas-dev/pandas/issues/14866

--- a/pandas/tests/indexes/common.py	2017-03-09 00:10:26.063996176 +0100
+++ b/pandas/tests/indexes/common.py	2017-03-09 00:10:53.152844191 +0100
@@ -119,20 +119,6 @@
         with tm.assertRaisesRegexp(ValueError, 'Invalid fill method'):
             idx.get_indexer(idx, method='invalid')
 
-    def test_ndarray_compat_properties(self):
-
-        idx = self.create_index()
-        self.assertTrue(idx.T.equals(idx))
-        self.assertTrue(idx.transpose().equals(idx))
-
-        values = idx.values
-        for prop in self._compat_props:
-            self.assertEqual(getattr(idx, prop), getattr(values, prop))
-
-        # test for validity
-        idx.nbytes
-        idx.values.nbytes
-
     def test_repr_roundtrip(self):
 
         idx = self.create_index()
--- a/pandas/tools/tests/test_tile.py	2017-03-08 17:47:39.762261841 +0100
+++ b/pandas/tools/tests/test_tile.py	2017-03-08 17:48:26.831780495 +0100
@@ -271,19 +271,6 @@
                                     np.array([0, 0, 1, 1], dtype=np.int8))
         tm.assert_numpy_array_equal(bins, np.array([0, 1.5, 3]))
 
-    def test_single_bin(self):
-        # issue 14652
-        expected = Series([0, 0])
-
-        s = Series([9., 9.])
-        result = cut(s, 1, labels=False)
-        tm.assert_series_equal(result, expected)
-
-        s = Series([-9., -9.])
-        result = cut(s, 1, labels=False)
-        tm.assert_series_equal(result, expected)
-
-
 def curpath():
     pth, _ = os.path.split(os.path.abspath(__file__))
     return pth
